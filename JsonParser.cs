//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Json.g4 by ANTLR 4.9

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace JsonParse {
using System;
using System.IO;
using System.Text;
using System.Diagnostics;
using System.Collections.Generic;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9")]
[System.CLSCompliant(false)]
public partial class JsonParser : Parser {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		STR_2=10, WS_3=11, INT_6=12, FLOAT_7=13;
	public const int
		RULE_json = 0, RULE_gen__nullable_gen__seplist__L44__pair = 1, RULE_gen__seplist__L44__pair = 2, 
		RULE_gen__nullable_gen__seplist__L44__json = 3, RULE_gen__seplist__L44__json = 4, 
		RULE_pair = 5, RULE_str = 6, RULE_start = 7;
	public static readonly string[] ruleNames = {
		"json", "gen__nullable_gen__seplist__L44__pair", "gen__seplist__L44__pair", 
		"gen__nullable_gen__seplist__L44__json", "gen__seplist__L44__json", "pair", 
		"str", "start"
	};

	private static readonly string[] _LiteralNames = {
		null, "'['", "']'", "'{'", "'}'", "'null'", "'true'", "'false'", "','", 
		"':'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, "STR_2", "WS_3", 
		"INT_6", "FLOAT_7"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Json.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static JsonParser() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}

		public JsonParser(ITokenStream input) : this(input, Console.Out, Console.Error) { }

		public JsonParser(ITokenStream input, TextWriter output, TextWriter errorOutput)
		: base(input, output, errorOutput)
	{
		Interpreter = new ParserATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	public partial class JsonContext : ParserRuleContext {
		public JsonValue result;
		public Gen__nullable_gen__seplist__L44__jsonContext local__2_json_case0;
		public Gen__nullable_gen__seplist__L44__pairContext local__2_json_case1;
		public IToken local__1_json_case2;
		public IToken local__1_json_case3;
		public StrContext local__1_json_case4;
		[System.Diagnostics.DebuggerNonUserCode] public Gen__nullable_gen__seplist__L44__jsonContext gen__nullable_gen__seplist__L44__json() {
			return GetRuleContext<Gen__nullable_gen__seplist__L44__jsonContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Gen__nullable_gen__seplist__L44__pairContext gen__nullable_gen__seplist__L44__pair() {
			return GetRuleContext<Gen__nullable_gen__seplist__L44__pairContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode INT_6() { return GetToken(JsonParser.INT_6, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode FLOAT_7() { return GetToken(JsonParser.FLOAT_7, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public StrContext str() {
			return GetRuleContext<StrContext>(0);
		}
		public JsonContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_json; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.EnterJson(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.ExitJson(this);
		}
	}

	[RuleVersion(0)]
	public JsonContext json() {
		JsonContext _localctx = new JsonContext(Context, State);
		EnterRule(_localctx, 0, RULE_json);
		try {
			State = 39;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__0:
				EnterOuterAlt(_localctx, 1);
				{
				State = 16; Match(T__0);
				State = 17; _localctx.local__2_json_case0 = gen__nullable_gen__seplist__L44__json();
				State = 18; Match(T__1);
				 
				        JsonValue tmp__2 ; 
				        System.Collections.Generic.List<JsonValue> tmp__1 ; 
				        tmp__1 = ( System.Collections.Generic.List<JsonValue> ) _localctx.local__2_json_case0.result ; 
				        tmp__2 = (JsonValue) json_list( tmp__1 ); 
				        _localctx.result =  tmp__2; 
				      
				}
				break;
			case T__2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 21; Match(T__2);
				State = 22; _localctx.local__2_json_case1 = gen__nullable_gen__seplist__L44__pair();
				State = 23; Match(T__3);
				 
				        JsonValue tmp__4 ; 
				        System.Collections.Generic.List<(string, JsonValue)> tmp__3 ; 
				        tmp__3 = ( System.Collections.Generic.List<(string, JsonValue)> ) _localctx.local__2_json_case1.result ; 
				        tmp__4 = (JsonValue) json_dict( tmp__3 ); 
				        _localctx.result =  tmp__4; 
				      
				}
				break;
			case INT_6:
				EnterOuterAlt(_localctx, 3);
				{
				State = 26; _localctx.local__1_json_case2 = Match(INT_6);
				 
				        JsonValue tmp__7 ; 
				        int tmp__6 ; 
				        CommonToken tmp__5 ; 
				        tmp__5 = ( CommonToken ) _localctx.local__1_json_case2 ; 
				        tmp__6 = (int) parse_int( tmp__5.Text ); 
				        tmp__7 = (JsonValue) json_int( tmp__6 ); 
				        _localctx.result =  tmp__7; 
				      
				}
				break;
			case FLOAT_7:
				EnterOuterAlt(_localctx, 4);
				{
				State = 28; _localctx.local__1_json_case3 = Match(FLOAT_7);
				 
				        JsonValue tmp__10 ; 
				        float tmp__9 ; 
				        CommonToken tmp__8 ; 
				        tmp__8 = ( CommonToken ) _localctx.local__1_json_case3 ; 
				        tmp__9 = (float) parse_float( tmp__8.Text ); 
				        tmp__10 = (JsonValue) json_float( tmp__9 ); 
				        _localctx.result =  tmp__10; 
				      
				}
				break;
			case STR_2:
				EnterOuterAlt(_localctx, 5);
				{
				State = 30; _localctx.local__1_json_case4 = str();
				 
				        JsonValue tmp__12 ; 
				        string tmp__11 ; 
				        tmp__11 = ( string ) _localctx.local__1_json_case4.result ; 
				        tmp__12 = (JsonValue) json_string( tmp__11 ); 
				        _localctx.result =  tmp__12; 
				      
				}
				break;
			case T__4:
				EnterOuterAlt(_localctx, 6);
				{
				State = 33; Match(T__4);
				 
				        JsonValue tmp__13 ; 
				        tmp__13 = (JsonValue) json_null(  ); 
				        _localctx.result =  tmp__13; 
				      
				}
				break;
			case T__5:
				EnterOuterAlt(_localctx, 7);
				{
				State = 35; Match(T__5);
				 
				        JsonValue tmp__15 ; 
				        int tmp__14 ; 
				        tmp__14 = 1 ; 
				        tmp__15 = (JsonValue) json_bool( tmp__14 ); 
				        _localctx.result =  tmp__15; 
				      
				}
				break;
			case T__6:
				EnterOuterAlt(_localctx, 8);
				{
				State = 37; Match(T__6);
				 
				        JsonValue tmp__17 ; 
				        int tmp__16 ; 
				        tmp__16 = 0 ; 
				        tmp__17 = (JsonValue) json_bool( tmp__16 ); 
				        _localctx.result =  tmp__17; 
				      
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Gen__nullable_gen__seplist__L44__pairContext : ParserRuleContext {
		public System.Collections.Generic.List<(string, JsonValue)> result;
		public Gen__seplist__L44__pairContext local__1_gen__nullable_gen__seplist__L44__pair_case0;
		[System.Diagnostics.DebuggerNonUserCode] public Gen__seplist__L44__pairContext gen__seplist__L44__pair() {
			return GetRuleContext<Gen__seplist__L44__pairContext>(0);
		}
		public Gen__nullable_gen__seplist__L44__pairContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gen__nullable_gen__seplist__L44__pair; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.EnterGen__nullable_gen__seplist__L44__pair(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.ExitGen__nullable_gen__seplist__L44__pair(this);
		}
	}

	[RuleVersion(0)]
	public Gen__nullable_gen__seplist__L44__pairContext gen__nullable_gen__seplist__L44__pair() {
		Gen__nullable_gen__seplist__L44__pairContext _localctx = new Gen__nullable_gen__seplist__L44__pairContext(Context, State);
		EnterRule(_localctx, 2, RULE_gen__nullable_gen__seplist__L44__pair);
		try {
			State = 45;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case STR_2:
				EnterOuterAlt(_localctx, 1);
				{
				State = 41; _localctx.local__1_gen__nullable_gen__seplist__L44__pair_case0 = gen__seplist__L44__pair(0);
				 
				        System.Collections.Generic.List<(string, JsonValue)> tmp__18 ; 
				        tmp__18 = ( System.Collections.Generic.List<(string, JsonValue)> ) _localctx.local__1_gen__nullable_gen__seplist__L44__pair_case0.result ; 
				        _localctx.result =  tmp__18; 
				      
				}
				break;
			case T__3:
				EnterOuterAlt(_localctx, 2);
				{
				 
				        System.Collections.Generic.List<(string, JsonValue)> tmp__19 ; 
				        tmp__19 = new System.Collections.Generic.List<(string, JsonValue)> { }; 
				        _localctx.result =  tmp__19; 
				      
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Gen__seplist__L44__pairContext : ParserRuleContext {
		public System.Collections.Generic.List<(string, JsonValue)> result;
		public Gen__seplist__L44__pairContext local__1_gen__seplist__L44__pair_case0;
		public PairContext local__1_gen__seplist__L44__pair_case1;
		public PairContext local__3_gen__seplist__L44__pair_case0;
		[System.Diagnostics.DebuggerNonUserCode] public PairContext pair() {
			return GetRuleContext<PairContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Gen__seplist__L44__pairContext gen__seplist__L44__pair() {
			return GetRuleContext<Gen__seplist__L44__pairContext>(0);
		}
		public Gen__seplist__L44__pairContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gen__seplist__L44__pair; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.EnterGen__seplist__L44__pair(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.ExitGen__seplist__L44__pair(this);
		}
	}

	[RuleVersion(0)]
	public Gen__seplist__L44__pairContext gen__seplist__L44__pair() {
		return gen__seplist__L44__pair(0);
	}

	private Gen__seplist__L44__pairContext gen__seplist__L44__pair(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		Gen__seplist__L44__pairContext _localctx = new Gen__seplist__L44__pairContext(Context, _parentState);
		Gen__seplist__L44__pairContext _prevctx = _localctx;
		int _startState = 4;
		EnterRecursionRule(_localctx, 4, RULE_gen__seplist__L44__pair, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 48; _localctx.local__1_gen__seplist__L44__pair_case1 = pair();
			 
			        (string, JsonValue) tmp__24 ; 
			        System.Collections.Generic.List<(string, JsonValue)> tmp__23 ; 
			        tmp__24 = ( (string, JsonValue) ) _localctx.local__1_gen__seplist__L44__pair_case1.result ; 
			        tmp__23 = new System.Collections.Generic.List<(string, JsonValue)> { tmp__24 }; 
			        _localctx.result =  tmp__23; 
			      
			}
			Context.Stop = TokenStream.LT(-1);
			State = 58;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,2,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Gen__seplist__L44__pairContext(_parentctx, _parentState);
					_localctx.local__1_gen__seplist__L44__pair_case0 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_gen__seplist__L44__pair);
					State = 51;
					if (!(Precpred(Context, 2))) throw new FailedPredicateException(this, "Precpred(Context, 2)");
					State = 52; Match(T__7);
					State = 53; _localctx.local__3_gen__seplist__L44__pair_case0 = pair();
					 
					                  System.Collections.Generic.List<(string, JsonValue)> tmp__22 ; 
					                  (string, JsonValue) tmp__21 ; 
					                  System.Collections.Generic.List<(string, JsonValue)> tmp__20 ; 
					                  tmp__20 = ( System.Collections.Generic.List<(string, JsonValue)> ) _localctx.local__1_gen__seplist__L44__pair_case0.result ; 
					                  tmp__21 = ( (string, JsonValue) ) _localctx.local__3_gen__seplist__L44__pair_case0.result ; 
					                  tmp__22 = (System.Collections.Generic.List<(string, JsonValue)>) append<(string, JsonValue)>( tmp__20, tmp__21 ); 
					                  _localctx.result =  tmp__22; 
					                
					}
					} 
				}
				State = 60;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,2,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class Gen__nullable_gen__seplist__L44__jsonContext : ParserRuleContext {
		public System.Collections.Generic.List<JsonValue> result;
		public Gen__seplist__L44__jsonContext local__1_gen__nullable_gen__seplist__L44__json_case0;
		[System.Diagnostics.DebuggerNonUserCode] public Gen__seplist__L44__jsonContext gen__seplist__L44__json() {
			return GetRuleContext<Gen__seplist__L44__jsonContext>(0);
		}
		public Gen__nullable_gen__seplist__L44__jsonContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gen__nullable_gen__seplist__L44__json; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.EnterGen__nullable_gen__seplist__L44__json(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.ExitGen__nullable_gen__seplist__L44__json(this);
		}
	}

	[RuleVersion(0)]
	public Gen__nullable_gen__seplist__L44__jsonContext gen__nullable_gen__seplist__L44__json() {
		Gen__nullable_gen__seplist__L44__jsonContext _localctx = new Gen__nullable_gen__seplist__L44__jsonContext(Context, State);
		EnterRule(_localctx, 6, RULE_gen__nullable_gen__seplist__L44__json);
		try {
			State = 65;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__0:
			case T__2:
			case T__4:
			case T__5:
			case T__6:
			case STR_2:
			case INT_6:
			case FLOAT_7:
				EnterOuterAlt(_localctx, 1);
				{
				State = 61; _localctx.local__1_gen__nullable_gen__seplist__L44__json_case0 = gen__seplist__L44__json(0);
				 
				        System.Collections.Generic.List<JsonValue> tmp__25 ; 
				        tmp__25 = ( System.Collections.Generic.List<JsonValue> ) _localctx.local__1_gen__nullable_gen__seplist__L44__json_case0.result ; 
				        _localctx.result =  tmp__25; 
				      
				}
				break;
			case T__1:
				EnterOuterAlt(_localctx, 2);
				{
				 
				        System.Collections.Generic.List<JsonValue> tmp__26 ; 
				        tmp__26 = new System.Collections.Generic.List<JsonValue> { }; 
				        _localctx.result =  tmp__26; 
				      
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Gen__seplist__L44__jsonContext : ParserRuleContext {
		public System.Collections.Generic.List<JsonValue> result;
		public Gen__seplist__L44__jsonContext local__1_gen__seplist__L44__json_case0;
		public JsonContext local__1_gen__seplist__L44__json_case1;
		public JsonContext local__3_gen__seplist__L44__json_case0;
		[System.Diagnostics.DebuggerNonUserCode] public JsonContext json() {
			return GetRuleContext<JsonContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Gen__seplist__L44__jsonContext gen__seplist__L44__json() {
			return GetRuleContext<Gen__seplist__L44__jsonContext>(0);
		}
		public Gen__seplist__L44__jsonContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gen__seplist__L44__json; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.EnterGen__seplist__L44__json(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.ExitGen__seplist__L44__json(this);
		}
	}

	[RuleVersion(0)]
	public Gen__seplist__L44__jsonContext gen__seplist__L44__json() {
		return gen__seplist__L44__json(0);
	}

	private Gen__seplist__L44__jsonContext gen__seplist__L44__json(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		Gen__seplist__L44__jsonContext _localctx = new Gen__seplist__L44__jsonContext(Context, _parentState);
		Gen__seplist__L44__jsonContext _prevctx = _localctx;
		int _startState = 8;
		EnterRecursionRule(_localctx, 8, RULE_gen__seplist__L44__json, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 68; _localctx.local__1_gen__seplist__L44__json_case1 = json();
			 
			        JsonValue tmp__31 ; 
			        System.Collections.Generic.List<JsonValue> tmp__30 ; 
			        tmp__31 = ( JsonValue ) _localctx.local__1_gen__seplist__L44__json_case1.result ; 
			        tmp__30 = new System.Collections.Generic.List<JsonValue> { tmp__31 }; 
			        _localctx.result =  tmp__30; 
			      
			}
			Context.Stop = TokenStream.LT(-1);
			State = 78;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,4,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Gen__seplist__L44__jsonContext(_parentctx, _parentState);
					_localctx.local__1_gen__seplist__L44__json_case0 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_gen__seplist__L44__json);
					State = 71;
					if (!(Precpred(Context, 2))) throw new FailedPredicateException(this, "Precpred(Context, 2)");
					State = 72; Match(T__7);
					State = 73; _localctx.local__3_gen__seplist__L44__json_case0 = json();
					 
					                  System.Collections.Generic.List<JsonValue> tmp__29 ; 
					                  JsonValue tmp__28 ; 
					                  System.Collections.Generic.List<JsonValue> tmp__27 ; 
					                  tmp__27 = ( System.Collections.Generic.List<JsonValue> ) _localctx.local__1_gen__seplist__L44__json_case0.result ; 
					                  tmp__28 = ( JsonValue ) _localctx.local__3_gen__seplist__L44__json_case0.result ; 
					                  tmp__29 = (System.Collections.Generic.List<JsonValue>) append<JsonValue>( tmp__27, tmp__28 ); 
					                  _localctx.result =  tmp__29; 
					                
					}
					} 
				}
				State = 80;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,4,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class PairContext : ParserRuleContext {
		public (string, JsonValue) result;
		public StrContext local__1_pair_case0;
		public JsonContext local__3_pair_case0;
		[System.Diagnostics.DebuggerNonUserCode] public StrContext str() {
			return GetRuleContext<StrContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JsonContext json() {
			return GetRuleContext<JsonContext>(0);
		}
		public PairContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pair; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.EnterPair(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.ExitPair(this);
		}
	}

	[RuleVersion(0)]
	public PairContext pair() {
		PairContext _localctx = new PairContext(Context, State);
		EnterRule(_localctx, 10, RULE_pair);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 81; _localctx.local__1_pair_case0 = str();
			State = 82; Match(T__8);
			State = 83; _localctx.local__3_pair_case0 = json();
			 
			        JsonValue tmp__34 ; 
			        string tmp__33 ; 
			        (string, JsonValue) tmp__32 ; 
			        tmp__33 = ( string ) _localctx.local__1_pair_case0.result ; 
			        tmp__34 = ( JsonValue ) _localctx.local__3_pair_case0.result ; 
			        tmp__32 = ( tmp__33 , tmp__34 ); 
			        _localctx.result =  tmp__32; 
			      
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class StrContext : ParserRuleContext {
		public string result;
		public IToken local__1_str_case0;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode STR_2() { return GetToken(JsonParser.STR_2, 0); }
		public StrContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_str; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.EnterStr(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.ExitStr(this);
		}
	}

	[RuleVersion(0)]
	public StrContext str() {
		StrContext _localctx = new StrContext(Context, State);
		EnterRule(_localctx, 12, RULE_str);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 86; _localctx.local__1_str_case0 = Match(STR_2);
			 
			        string tmp__36 ; 
			        CommonToken tmp__35 ; 
			        tmp__35 = ( CommonToken ) _localctx.local__1_str_case0 ; 
			        tmp__36 = (string) unesc_string( tmp__35.Text ); 
			        _localctx.result =  tmp__36; 
			      
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class StartContext : ParserRuleContext {
		public JsonValue result;
		public JsonContext local__1_start_case0;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Eof() { return GetToken(JsonParser.Eof, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public JsonContext json() {
			return GetRuleContext<JsonContext>(0);
		}
		public StartContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_start; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.EnterStart(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IJsonListener typedListener = listener as IJsonListener;
			if (typedListener != null) typedListener.ExitStart(this);
		}
	}

	[RuleVersion(0)]
	public StartContext start() {
		StartContext _localctx = new StartContext(Context, State);
		EnterRule(_localctx, 14, RULE_start);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 89; _localctx.local__1_start_case0 = json();
			State = 90; Match(Eof);
			 
			        JsonValue tmp__37 ; 
			        tmp__37 = ( JsonValue ) _localctx.local__1_start_case0.result ; 
			        _localctx.result =  tmp__37; 
			      
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 2: return gen__seplist__L44__pair_sempred((Gen__seplist__L44__pairContext)_localctx, predIndex);
		case 4: return gen__seplist__L44__json_sempred((Gen__seplist__L44__jsonContext)_localctx, predIndex);
		}
		return true;
	}
	private bool gen__seplist__L44__pair_sempred(Gen__seplist__L44__pairContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return Precpred(Context, 2);
		}
		return true;
	}
	private bool gen__seplist__L44__json_sempred(Gen__seplist__L44__jsonContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1: return Precpred(Context, 2);
		}
		return true;
	}

	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x3', '\xF', '`', '\x4', '\x2', '\t', '\x2', '\x4', '\x3', 
		'\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', '\x5', '\x4', 
		'\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', '\t', '\b', 
		'\x4', '\t', '\t', '\t', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x5', 
		'\x2', '*', '\n', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x5', '\x3', '\x30', '\n', '\x3', '\x3', '\x4', '\x3', '\x4', 
		'\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', 
		'\x3', '\x4', '\x3', '\x4', '\a', '\x4', ';', '\n', '\x4', '\f', '\x4', 
		'\xE', '\x4', '>', '\v', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', 
		'\x3', '\x5', '\x5', '\x5', '\x44', '\n', '\x5', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\a', '\x6', 'O', '\n', '\x6', '\f', 
		'\x6', '\xE', '\x6', 'R', '\v', '\x6', '\x3', '\a', '\x3', '\a', '\x3', 
		'\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x2', 
		'\x4', '\x6', '\n', '\n', '\x2', '\x4', '\x6', '\b', '\n', '\f', '\xE', 
		'\x10', '\x2', '\x2', '\x2', '\x62', '\x2', ')', '\x3', '\x2', '\x2', 
		'\x2', '\x4', '/', '\x3', '\x2', '\x2', '\x2', '\x6', '\x31', '\x3', '\x2', 
		'\x2', '\x2', '\b', '\x43', '\x3', '\x2', '\x2', '\x2', '\n', '\x45', 
		'\x3', '\x2', '\x2', '\x2', '\f', 'S', '\x3', '\x2', '\x2', '\x2', '\xE', 
		'X', '\x3', '\x2', '\x2', '\x2', '\x10', '[', '\x3', '\x2', '\x2', '\x2', 
		'\x12', '\x13', '\a', '\x3', '\x2', '\x2', '\x13', '\x14', '\x5', '\b', 
		'\x5', '\x2', '\x14', '\x15', '\a', '\x4', '\x2', '\x2', '\x15', '\x16', 
		'\b', '\x2', '\x1', '\x2', '\x16', '*', '\x3', '\x2', '\x2', '\x2', '\x17', 
		'\x18', '\a', '\x5', '\x2', '\x2', '\x18', '\x19', '\x5', '\x4', '\x3', 
		'\x2', '\x19', '\x1A', '\a', '\x6', '\x2', '\x2', '\x1A', '\x1B', '\b', 
		'\x2', '\x1', '\x2', '\x1B', '*', '\x3', '\x2', '\x2', '\x2', '\x1C', 
		'\x1D', '\a', '\xE', '\x2', '\x2', '\x1D', '*', '\b', '\x2', '\x1', '\x2', 
		'\x1E', '\x1F', '\a', '\xF', '\x2', '\x2', '\x1F', '*', '\b', '\x2', '\x1', 
		'\x2', ' ', '!', '\x5', '\xE', '\b', '\x2', '!', '\"', '\b', '\x2', '\x1', 
		'\x2', '\"', '*', '\x3', '\x2', '\x2', '\x2', '#', '$', '\a', '\a', '\x2', 
		'\x2', '$', '*', '\b', '\x2', '\x1', '\x2', '%', '&', '\a', '\b', '\x2', 
		'\x2', '&', '*', '\b', '\x2', '\x1', '\x2', '\'', '(', '\a', '\t', '\x2', 
		'\x2', '(', '*', '\b', '\x2', '\x1', '\x2', ')', '\x12', '\x3', '\x2', 
		'\x2', '\x2', ')', '\x17', '\x3', '\x2', '\x2', '\x2', ')', '\x1C', '\x3', 
		'\x2', '\x2', '\x2', ')', '\x1E', '\x3', '\x2', '\x2', '\x2', ')', ' ', 
		'\x3', '\x2', '\x2', '\x2', ')', '#', '\x3', '\x2', '\x2', '\x2', ')', 
		'%', '\x3', '\x2', '\x2', '\x2', ')', '\'', '\x3', '\x2', '\x2', '\x2', 
		'*', '\x3', '\x3', '\x2', '\x2', '\x2', '+', ',', '\x5', '\x6', '\x4', 
		'\x2', ',', '-', '\b', '\x3', '\x1', '\x2', '-', '\x30', '\x3', '\x2', 
		'\x2', '\x2', '.', '\x30', '\b', '\x3', '\x1', '\x2', '/', '+', '\x3', 
		'\x2', '\x2', '\x2', '/', '.', '\x3', '\x2', '\x2', '\x2', '\x30', '\x5', 
		'\x3', '\x2', '\x2', '\x2', '\x31', '\x32', '\b', '\x4', '\x1', '\x2', 
		'\x32', '\x33', '\x5', '\f', '\a', '\x2', '\x33', '\x34', '\b', '\x4', 
		'\x1', '\x2', '\x34', '<', '\x3', '\x2', '\x2', '\x2', '\x35', '\x36', 
		'\f', '\x4', '\x2', '\x2', '\x36', '\x37', '\a', '\n', '\x2', '\x2', '\x37', 
		'\x38', '\x5', '\f', '\a', '\x2', '\x38', '\x39', '\b', '\x4', '\x1', 
		'\x2', '\x39', ';', '\x3', '\x2', '\x2', '\x2', ':', '\x35', '\x3', '\x2', 
		'\x2', '\x2', ';', '>', '\x3', '\x2', '\x2', '\x2', '<', ':', '\x3', '\x2', 
		'\x2', '\x2', '<', '=', '\x3', '\x2', '\x2', '\x2', '=', '\a', '\x3', 
		'\x2', '\x2', '\x2', '>', '<', '\x3', '\x2', '\x2', '\x2', '?', '@', '\x5', 
		'\n', '\x6', '\x2', '@', '\x41', '\b', '\x5', '\x1', '\x2', '\x41', '\x44', 
		'\x3', '\x2', '\x2', '\x2', '\x42', '\x44', '\b', '\x5', '\x1', '\x2', 
		'\x43', '?', '\x3', '\x2', '\x2', '\x2', '\x43', '\x42', '\x3', '\x2', 
		'\x2', '\x2', '\x44', '\t', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', 
		'\b', '\x6', '\x1', '\x2', '\x46', 'G', '\x5', '\x2', '\x2', '\x2', 'G', 
		'H', '\b', '\x6', '\x1', '\x2', 'H', 'P', '\x3', '\x2', '\x2', '\x2', 
		'I', 'J', '\f', '\x4', '\x2', '\x2', 'J', 'K', '\a', '\n', '\x2', '\x2', 
		'K', 'L', '\x5', '\x2', '\x2', '\x2', 'L', 'M', '\b', '\x6', '\x1', '\x2', 
		'M', 'O', '\x3', '\x2', '\x2', '\x2', 'N', 'I', '\x3', '\x2', '\x2', '\x2', 
		'O', 'R', '\x3', '\x2', '\x2', '\x2', 'P', 'N', '\x3', '\x2', '\x2', '\x2', 
		'P', 'Q', '\x3', '\x2', '\x2', '\x2', 'Q', '\v', '\x3', '\x2', '\x2', 
		'\x2', 'R', 'P', '\x3', '\x2', '\x2', '\x2', 'S', 'T', '\x5', '\xE', '\b', 
		'\x2', 'T', 'U', '\a', '\v', '\x2', '\x2', 'U', 'V', '\x5', '\x2', '\x2', 
		'\x2', 'V', 'W', '\b', '\a', '\x1', '\x2', 'W', '\r', '\x3', '\x2', '\x2', 
		'\x2', 'X', 'Y', '\a', '\f', '\x2', '\x2', 'Y', 'Z', '\b', '\b', '\x1', 
		'\x2', 'Z', '\xF', '\x3', '\x2', '\x2', '\x2', '[', '\\', '\x5', '\x2', 
		'\x2', '\x2', '\\', ']', '\a', '\x2', '\x2', '\x3', ']', '^', '\b', '\t', 
		'\x1', '\x2', '^', '\x11', '\x3', '\x2', '\x2', '\x2', '\a', ')', '/', 
		'<', '\x43', 'P',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace JsonParse
